# -- 코드를 작성해주세요
# WITH BINARY_RESULT AS (
#     select ID, EMAIL, D.SKILL_CODE & S.CODE AS BIN_CODE
#     FROM DEVELOPERS AS D
#     JOIN SKILLCODES AS S ON D.SKILL_CODE & S.CODE
# ), SKILL_NAMES AS (
#     SELECT B.ID, B.EMAIL, S.NAME, S.CATEGORY
#     FROM BINARY_RESULT AS B
#     JOIN SKILLCODES AS S ON B.BIN_CODE = S.CODE
# )
-- GRADE를 먼저 계산하고, NULL인 행은 바깥에서 걸러냅니다.
SELECT  GRADE, ID, EMAIL
FROM (
    SELECT
        CASE
            WHEN (SKILL_CODE & (SELECT SUM(CODE) FROM SKILLCODES WHERE CATEGORY = 'Front End')) > 0
                 AND (SKILL_CODE & (SELECT CODE FROM SKILLCODES WHERE NAME = 'Python')) > 0
                THEN 'A'
            WHEN (SKILL_CODE & (SELECT CODE FROM SKILLCODES WHERE NAME = 'C#')) > 0
                THEN 'B'
            WHEN (SKILL_CODE & (SELECT SUM(CODE) FROM SKILLCODES WHERE CATEGORY = 'Front End')) > 0
                THEN 'C'
            ELSE NULL
        END AS GRADE,
        ID,
        EMAIL
    FROM DEVELOPERS
) T
WHERE GRADE IS NOT NULL
ORDER BY GRADE, ID;
